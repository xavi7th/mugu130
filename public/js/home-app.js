webpackJsonp([3],{

/***/ "./resources/assets/js/angular/controllers/home-controller.js":
/***/ (function(module, exports) {

eval("\nhome.controller('HomeController', ['$scope', 'sendRequest', 'bootstrapPage', function ($scope, sendRequest, bootstrapPage) {\n  NProgress.start();\n\n  var getPageDetails = function getPageDetails() {\n    sendRequest.request('/api/get-home-page-details').then(function (rsp) {\n      // console.log(rsp);\n      if (rsp.slides) {\n        $scope.slides = rsp.slides;\n        NProgress.done();\n      }\n      if (rsp.news_items) {\n        $scope.news_items = rsp.news_items;\n        NProgress.done();\n      }\n      if (rsp.team_members) {\n        $scope.team_members = rsp.team_members;\n        NProgress.done();\n      } else {\n        // Notification.error({ message: 'There was a '})\n      }\n    });\n  };\n\n  getPageDetails();\n\n  bootstrapPage.homepage($scope);\n}]);\n\nhome.controller('AboutController', ['$scope', 'sendRequest', 'bootstrapPage', function ($scope, sendRequest, bootstrapPage) {\n\n  $scope.title = \"About Us\";\n  NProgress.start();\n  var getPageDetails = function getPageDetails() {\n    sendRequest.request('/api/get-about-page-details').then(function (rsp) {\n      // console.log(rsp);\n      if (rsp.team_members) {\n        $scope.team_members = rsp.team_members;\n        NProgress.done();\n      } else {\n        // Notification.error({ message: 'There was a '})\n      }\n    });\n  };\n\n  getPageDetails();\n  bootstrapPage.homepage($scope);\n}]);\n\nhome.controller('FAQController', ['$scope', 'bootstrapPage', function ($scope, bootstrapPage) {\n\n  $scope.title = \"FAQ\";\n  NProgress.start();\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('StartGuideController', ['$scope', 'bootstrapPage', function ($scope, bootstrapPage) {\n\n  $scope.title = \"Start Guide for members\";\n  NProgress.start();\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('BuySellCryptoController', ['$scope', 'sendRequest', 'bootstrapPage', function ($scope, sendRequest, bootstrapPage) {\n\n  $scope.title = \"Buy and Sell Crypto\";\n  NProgress.start();\n  var getPageDetails = function getPageDetails() {\n    sendRequest.request('/api/get-crypto-page-details').then(function (rsp) {\n      if (rsp.crypto_sites) {\n        $scope.crypto_sites = rsp.crypto_sites;\n        NProgress.done();\n      } else {\n        // Notification.error({ message: 'There was a '})\n      }\n    });\n  };\n\n  getPageDetails();\n\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('AffilliatesController', ['$scope', 'bootstrapPage', function ($scope, bootstrapPage) {\n\n  $scope.title = \"Hello from rentals controller.js\";\n  NProgress.start();\n  bootstrapPage.homepage($scope);\n}]);\n\nhome.controller('RepsController', ['$scope', 'bootstrapPage', function ($scope, bootstrapPage) {\n\n  $scope.title = \"Hello from rentals controller.js\";\n  NProgress.start();\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('SecurityController', ['$scope', 'bootstrapPage', function ($scope, bootstrapPage) {\n\n  $scope.title = \"Security\";\n  NProgress.start();\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('ContactController', ['$scope', 'bootstrapPage', 'sendRequest', function ($scope, bootstrapPage, sendRequest) {\n\n  $scope.title = \"Support Desk\";\n  NProgress.start();\n  $scope.contactSupport = function () {\n    // console.log();\n    sendRequest.postRequest('/api/contact-support', $scope.contact).then(function (rsp) {\n\n      if (rsp.status == 200) {\n        if (rsp.data.status) {\n          $scope.contact = null;\n          $scope.messagesent = true;\n          // $scope.support.$setPristine();\n        } else {\n          $scope.messagenotsent = true;\n          $scope.support.$setPristine();\n        }\n      } else {\n        // Notification.error({ message: 'There was a '})\n        $scope.messagenotsent = true;\n      }\n      NProgress.done();\n    });\n  };\n\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('RegisterController', ['$scope', '$location', 'Notification', 'sendRequest', 'bootstrapPage', function ($scope, $location, Notification, sendRequest, bootstrapPage) {\n\n  NProgress.start();\n  $scope.title = \"Create Account\";\n  $scope.userdetails = { referrer: refdetails };\n  $scope.registerAccount = function () {\n    $scope.submitted = true;\n\n    if (angular.isUndefined($scope.userdetails)) {\n      Notification.error({ message: 'All fields required', positionX: 'center' });\n    } else {\n      sendRequest.postRequest('/register', $scope.userdetails).then(function (rsp) {\n        if (rsp.status == 422) {\n          $scope.errors = rsp.data.errors;\n          Notification.error({ message: 'The given data was invalid', positionX: 'center' });\n          $scope.submitted = false;\n        } else if (rsp.status == 200) {\n          $scope.details = null;\n          Notification.success({ message: 'Registration successful', positionX: 'center' });\n          window.location.replace('/login');\n        }\n        NProgress.done();\n      });\n    }\n  };\n\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);\n\nhome.controller('LoginController', ['$scope', 'sendRequest', 'bootstrapPage', function ($scope, sendRequest, bootstrapPage) {\n\n  NProgress.start();\n  $scope.title = \"Begin your session\";\n  var token = document.head.querySelector('meta[name=\"csrf-token\"]');\n  $scope.token = token.content;\n  $scope.errors = undefined == errors ? null : _.isEmpty(JSON.parse(errors)) ? null : JSON.parse(errors);\n\n  bootstrapPage.homepage($scope);\n  NProgress.done();\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FuZ3VsYXIvY29udHJvbGxlcnMvaG9tZS1jb250cm9sbGVyLmpzP2Q1OWIiXSwibmFtZXMiOlsiaG9tZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJzZW5kUmVxdWVzdCIsImJvb3RzdHJhcFBhZ2UiLCJOUHJvZ3Jlc3MiLCJzdGFydCIsImdldFBhZ2VEZXRhaWxzIiwicmVxdWVzdCIsInRoZW4iLCJyc3AiLCJzbGlkZXMiLCJkb25lIiwibmV3c19pdGVtcyIsInRlYW1fbWVtYmVycyIsImhvbWVwYWdlIiwidGl0bGUiLCJjcnlwdG9fc2l0ZXMiLCJjb250YWN0U3VwcG9ydCIsInBvc3RSZXF1ZXN0IiwiY29udGFjdCIsInN0YXR1cyIsImRhdGEiLCJtZXNzYWdlc2VudCIsIm1lc3NhZ2Vub3RzZW50Iiwic3VwcG9ydCIsIiRzZXRQcmlzdGluZSIsIiRsb2NhdGlvbiIsIk5vdGlmaWNhdGlvbiIsInVzZXJkZXRhaWxzIiwicmVmZXJyZXIiLCJyZWZkZXRhaWxzIiwicmVnaXN0ZXJBY2NvdW50Iiwic3VibWl0dGVkIiwiYW5ndWxhciIsImlzVW5kZWZpbmVkIiwiZXJyb3IiLCJtZXNzYWdlIiwicG9zaXRpb25YIiwiZXJyb3JzIiwiZGV0YWlscyIsInN1Y2Nlc3MiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlcGxhY2UiLCJ0b2tlbiIsImRvY3VtZW50IiwiaGVhZCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwidW5kZWZpbmVkIiwiXyIsImlzRW1wdHkiLCJKU09OIiwicGFyc2UiXSwibWFwcGluZ3MiOiI7QUFDRUEsS0FBS0MsVUFBTCxDQUFnQixnQkFBaEIsRUFBa0MsQ0FBQyxRQUFELEVBQVcsYUFBWCxFQUEwQixlQUExQixFQUEyQyxVQUFVQyxNQUFWLEVBQWtCQyxXQUFsQixFQUErQkMsYUFBL0IsRUFBK0M7QUFDMUhDLFlBQVVDLEtBQVY7O0FBRUEsTUFBSUMsaUJBQWlCLFNBQWpCQSxj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QUwsQ0FBV2YsTUFBWCxDQUFwRjs7QUFFQW5DLGdCQUFjVyxRQUFkLENBQXVCYixNQUF2QjtBQUNBRyxZQUFVTyxJQUFWO0FBQ0QsQ0FWa0MsQ0FBbkMiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FuZ3VsYXIvY29udHJvbGxlcnMvaG9tZS1jb250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gIGhvbWUuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdzZW5kUmVxdWVzdCcsICdib290c3RyYXBQYWdlJywgZnVuY3Rpb24gKCRzY29wZSwgc2VuZFJlcXVlc3QsIGJvb3RzdHJhcFBhZ2UgKSB7XG4gICAgTlByb2dyZXNzLnN0YXJ0KCk7XG5cbiAgICB2YXIgZ2V0UGFnZURldGFpbHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBzZW5kUmVxdWVzdC5yZXF1ZXN0KCcvYXBpL2dldC1ob21lLXBhZ2UtZGV0YWlscycpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJzcCkge1xuICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocnNwKTtcbiAgICAgICAgICAgICAgICAgIGlmIChyc3Auc2xpZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5zbGlkZXMgPSByc3Auc2xpZGVzO1xuICAgICAgICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgaWYgKHJzcC5uZXdzX2l0ZW1zKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5uZXdzX2l0ZW1zID0gcnNwLm5ld3NfaXRlbXM7XG4gICAgICAgICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBpZiAocnNwLnRlYW1fbWVtYmVycykge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUudGVhbV9tZW1iZXJzID0gcnNwLnRlYW1fbWVtYmVycztcbiAgICAgICAgICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIE5vdGlmaWNhdGlvbi5lcnJvcih7IG1lc3NhZ2U6ICdUaGVyZSB3YXMgYSAnfSlcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgZ2V0UGFnZURldGFpbHMoKTtcblxuICAgIGJvb3RzdHJhcFBhZ2UuaG9tZXBhZ2UoJHNjb3BlKTtcbiAgfV0pO1xuXG4gIGhvbWUuY29udHJvbGxlcignQWJvdXRDb250cm9sbGVyJywgWyckc2NvcGUnLCAnc2VuZFJlcXVlc3QnLCAnYm9vdHN0cmFwUGFnZScsIGZ1bmN0aW9uICgkc2NvcGUsIHNlbmRSZXF1ZXN0LCBib290c3RyYXBQYWdlICkge1xuXG4gICAgJHNjb3BlLnRpdGxlID0gXCJBYm91dCBVc1wiO1xuICAgIE5Qcm9ncmVzcy5zdGFydCgpO1xuICAgIHZhciBnZXRQYWdlRGV0YWlscyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHNlbmRSZXF1ZXN0LnJlcXVlc3QoJy9hcGkvZ2V0LWFib3V0LXBhZ2UtZGV0YWlscycpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJzcCkge1xuICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocnNwKTtcbiAgICAgICAgICAgICAgICAgIGlmIChyc3AudGVhbV9tZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS50ZWFtX21lbWJlcnMgPSByc3AudGVhbV9tZW1iZXJzO1xuICAgICAgICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpO1xuICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBOb3RpZmljYXRpb24uZXJyb3IoeyBtZXNzYWdlOiAnVGhlcmUgd2FzIGEgJ30pXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGdldFBhZ2VEZXRhaWxzKCk7XG4gICAgYm9vdHN0cmFwUGFnZS5ob21lcGFnZSgkc2NvcGUpO1xuXG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ0ZBUUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdib290c3RyYXBQYWdlJywgZnVuY3Rpb24gKCRzY29wZSwgYm9vdHN0cmFwUGFnZSApIHtcblxuICAgICRzY29wZS50aXRsZSA9IFwiRkFRXCI7XG4gICAgTlByb2dyZXNzLnN0YXJ0KCk7XG4gICAgYm9vdHN0cmFwUGFnZS5ob21lcGFnZSgkc2NvcGUpO1xuICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ1N0YXJ0R3VpZGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnYm9vdHN0cmFwUGFnZScsIGZ1bmN0aW9uICgkc2NvcGUsIGJvb3RzdHJhcFBhZ2UgKSB7XG5cbiAgICAkc2NvcGUudGl0bGUgPSBcIlN0YXJ0IEd1aWRlIGZvciBtZW1iZXJzXCI7XG4gICAgTlByb2dyZXNzLnN0YXJ0KCk7XG4gICAgYm9vdHN0cmFwUGFnZS5ob21lcGFnZSgkc2NvcGUpO1xuICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ0J1eVNlbGxDcnlwdG9Db250cm9sbGVyJywgWyckc2NvcGUnLCAnc2VuZFJlcXVlc3QnLCAnYm9vdHN0cmFwUGFnZScsIGZ1bmN0aW9uICgkc2NvcGUsIHNlbmRSZXF1ZXN0LCBib290c3RyYXBQYWdlICkge1xuXG4gICAgJHNjb3BlLnRpdGxlID0gXCJCdXkgYW5kIFNlbGwgQ3J5cHRvXCI7XG4gICAgTlByb2dyZXNzLnN0YXJ0KCk7XG4gICAgdmFyIGdldFBhZ2VEZXRhaWxzID0gZnVuY3Rpb24gKCkge1xuICAgICAgc2VuZFJlcXVlc3QucmVxdWVzdCgnL2FwaS9nZXQtY3J5cHRvLXBhZ2UtZGV0YWlscycpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJzcCkge1xuICAgICAgICAgICAgICAgICAgaWYgKHJzcC5jcnlwdG9fc2l0ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmNyeXB0b19zaXRlcyA9IHJzcC5jcnlwdG9fc2l0ZXM7XG4gICAgICAgICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gICAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIE5vdGlmaWNhdGlvbi5lcnJvcih7IG1lc3NhZ2U6ICdUaGVyZSB3YXMgYSAnfSlcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgZ2V0UGFnZURldGFpbHMoKTtcblxuXG4gICAgYm9vdHN0cmFwUGFnZS5ob21lcGFnZSgkc2NvcGUpO1xuICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ0FmZmlsbGlhdGVzQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ2Jvb3RzdHJhcFBhZ2UnLCBmdW5jdGlvbiAoJHNjb3BlLCBib290c3RyYXBQYWdlICkge1xuXG4gICAgJHNjb3BlLnRpdGxlID0gXCJIZWxsbyBmcm9tIHJlbnRhbHMgY29udHJvbGxlci5qc1wiO1xuICAgIE5Qcm9ncmVzcy5zdGFydCgpO1xuICAgIGJvb3RzdHJhcFBhZ2UuaG9tZXBhZ2UoJHNjb3BlKTtcbiAgfV0pO1xuXG4gIGhvbWUuY29udHJvbGxlcignUmVwc0NvbnRyb2xsZXInLCBbJyRzY29wZScsICdib290c3RyYXBQYWdlJywgZnVuY3Rpb24gKCRzY29wZSwgYm9vdHN0cmFwUGFnZSApIHtcblxuICAgICRzY29wZS50aXRsZSA9IFwiSGVsbG8gZnJvbSByZW50YWxzIGNvbnRyb2xsZXIuanNcIjtcbiAgICBOUHJvZ3Jlc3Muc3RhcnQoKTtcbiAgICBib290c3RyYXBQYWdlLmhvbWVwYWdlKCRzY29wZSk7XG4gICAgTlByb2dyZXNzLmRvbmUoKTtcbiAgfV0pO1xuXG4gIGhvbWUuY29udHJvbGxlcignU2VjdXJpdHlDb250cm9sbGVyJywgWyckc2NvcGUnLCAnYm9vdHN0cmFwUGFnZScsIGZ1bmN0aW9uICgkc2NvcGUsIGJvb3RzdHJhcFBhZ2UgKSB7XG5cbiAgICAkc2NvcGUudGl0bGUgPSBcIlNlY3VyaXR5XCI7XG4gICAgTlByb2dyZXNzLnN0YXJ0KCk7XG4gICAgYm9vdHN0cmFwUGFnZS5ob21lcGFnZSgkc2NvcGUpO1xuICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ0NvbnRhY3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnYm9vdHN0cmFwUGFnZScsICdzZW5kUmVxdWVzdCcsIGZ1bmN0aW9uICgkc2NvcGUsIGJvb3RzdHJhcFBhZ2UsIHNlbmRSZXF1ZXN0ICkge1xuXG4gICAgJHNjb3BlLnRpdGxlID0gXCJTdXBwb3J0IERlc2tcIjtcbiAgICBOUHJvZ3Jlc3Muc3RhcnQoKTtcbiAgICAkc2NvcGUuY29udGFjdFN1cHBvcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZygpO1xuICAgICAgc2VuZFJlcXVlc3QucG9zdFJlcXVlc3QoJy9hcGkvY29udGFjdC1zdXBwb3J0JywgJHNjb3BlLmNvbnRhY3QpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJzcCkge1xuXG4gICAgICAgICAgICAgICAgICBpZiAocnNwLnN0YXR1cyA9PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJzcC5kYXRhLnN0YXR1cykge1xuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5jb250YWN0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubWVzc2FnZXNlbnQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgIC8vICRzY29wZS5zdXBwb3J0LiRzZXRQcmlzdGluZSgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5tZXNzYWdlbm90c2VudCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN1cHBvcnQuJHNldFByaXN0aW5lKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIE5vdGlmaWNhdGlvbi5lcnJvcih7IG1lc3NhZ2U6ICdUaGVyZSB3YXMgYSAnfSlcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLm1lc3NhZ2Vub3RzZW50ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuXG4gICAgYm9vdHN0cmFwUGFnZS5ob21lcGFnZSgkc2NvcGUpO1xuICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRsb2NhdGlvbicsICdOb3RpZmljYXRpb24nLCAnc2VuZFJlcXVlc3QnLCAnYm9vdHN0cmFwUGFnZScsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgTm90aWZpY2F0aW9uLCBzZW5kUmVxdWVzdCwgYm9vdHN0cmFwUGFnZSApIHtcblxuICAgIE5Qcm9ncmVzcy5zdGFydCgpO1xuICAgICRzY29wZS50aXRsZSA9IFwiQ3JlYXRlIEFjY291bnRcIjtcbiAgICAkc2NvcGUudXNlcmRldGFpbHMgPSB7cmVmZXJyZXIgOiByZWZkZXRhaWxzfTtcbiAgICAkc2NvcGUucmVnaXN0ZXJBY2NvdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgJHNjb3BlLnN1Ym1pdHRlZCA9IHRydWU7XG5cbiAgICAgIGlmIChhbmd1bGFyLmlzVW5kZWZpbmVkKCRzY29wZS51c2VyZGV0YWlscykpIHtcbiAgICAgICAgTm90aWZpY2F0aW9uLmVycm9yKHsgbWVzc2FnZTogJ0FsbCBmaWVsZHMgcmVxdWlyZWQnLCBwb3NpdGlvblg6ICdjZW50ZXInIH0pO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHNlbmRSZXF1ZXN0LnBvc3RSZXF1ZXN0KCcvcmVnaXN0ZXInLCAkc2NvcGUudXNlcmRldGFpbHMpXG4gICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocnNwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyc3Auc3RhdHVzID09IDQyMikge1xuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5lcnJvcnMgPSByc3AuZGF0YS5lcnJvcnM7XG4gICAgICAgICAgICAgICAgICAgICAgTm90aWZpY2F0aW9uLmVycm9yKHsgbWVzc2FnZTogJ1RoZSBnaXZlbiBkYXRhIHdhcyBpbnZhbGlkJywgcG9zaXRpb25YOiAnY2VudGVyJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuc3VibWl0dGVkID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChyc3Auc3RhdHVzID09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5kZXRhaWxzID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICBOb3RpZmljYXRpb24uc3VjY2Vzcyh7IG1lc3NhZ2U6ICdSZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCcsIHBvc2l0aW9uWDogJ2NlbnRlcicgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoJy9sb2dpbicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIH07XG5cblxuXG5cblxuICAgIGJvb3RzdHJhcFBhZ2UuaG9tZXBhZ2UoJHNjb3BlKTtcbiAgICBOUHJvZ3Jlc3MuZG9uZSgpO1xuXG4gIH1dKTtcblxuICBob21lLmNvbnRyb2xsZXIoJ0xvZ2luQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ3NlbmRSZXF1ZXN0JywgJ2Jvb3RzdHJhcFBhZ2UnLCBmdW5jdGlvbiAoJHNjb3BlLCBzZW5kUmVxdWVzdCwgYm9vdHN0cmFwUGFnZSApIHtcblxuICAgIE5Qcm9ncmVzcy5zdGFydCgpO1xuICAgICRzY29wZS50aXRsZSA9IFwiQmVnaW4geW91ciBzZXNzaW9uXCI7XG4gICAgbGV0IHRva2VuID0gZG9jdW1lbnQuaGVhZC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCJdJyk7XG4gICAgJHNjb3BlLnRva2VuID0gdG9rZW4uY29udGVudDtcbiAgICAkc2NvcGUuZXJyb3JzID0gdW5kZWZpbmVkID09IGVycm9ycyA/IG51bGwgOiBfLmlzRW1wdHkoSlNPTi5wYXJzZShlcnJvcnMpKSA/IG51bGwgOiBKU09OLnBhcnNlKGVycm9ycyk7XG5cbiAgICBib290c3RyYXBQYWdlLmhvbWVwYWdlKCRzY29wZSk7XG4gICAgTlByb2dyZXNzLmRvbmUoKTtcbiAgfV0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9hbmd1bGFyL2NvbnRyb2xsZXJzL2hvbWUtY29udHJvbGxlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/js/angular/controllers/home-controller.js\n");

/***/ }),

/***/ "./resources/assets/js/angular/directives/countdownTimer.js":
/***/ (function(module, exports) {

eval("// This is a highly modified and specific version of the timer. For a more robust and better baseline see the timer setup in Evernote.\n// This is a directive that accepts countdown time in seconds and counts down those seconds till now.\n\nangular.module('countdownTimer', []).directive('countdownTimer', ['$timeout', '$compile', function ($timeout, $compile) {\n\n\treturn {\n\t\trestrict: 'E',\n\t\treplace: true,\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\tcountdownAttr: '=countdown', //what unit? seconds\n\t\t\tonfinish: '&finish'\n\t\t},\n\n\t\ttemplate: '<div>' + '<h1 class=\"time\">{{ minutes }}:' + '{{ seconds }}</h1>' + '<ng-transclude></ng-transclude>' + '</div>',\n\n\t\tlink: function link(scope, elem, attrs) {\n\n\t\t\t//Properties\n\t\t\tvar countdown = parseInt(scope.countdownAttr, 10);\n\n\t\t\tfunction tick() {\n\n\t\t\t\t//The default time that the timer will be reset to after count down expires.\n\t\t\t\tscope.millis = 0;\n\n\t\t\t\tif (countdown > 0) {\n\t\t\t\t\tscope.millis = countdown * 1000;\n\t\t\t\t\tcountdown--;\n\t\t\t\t} else if (countdown <= 0) {\n\t\t\t\t\tscope.stop();\n\t\t\t\t\t// elem.children('h1').html('Time up!');\n\t\t\t\t\tscope.onfinish();\n\t\t\t\t}\n\n\t\t\t\tscope.seconds = twoNumbers(Math.floor(scope.millis / 1000 % 60));\n\t\t\t\tscope.minutes = Math.floor(scope.millis / (1000 * 60) % 60);\n\t\t\t\tscope.hours = Math.floor(scope.millis / (1000 * 60 * 60) % 24);\n\t\t\t\tscope.days = Math.floor(scope.millis / (1000 * 60 * 60) / 24);\n\n\t\t\t\tscope.$apply();\n\t\t\t}\n\n\t\t\tfunction resetInterval() {\n\t\t\t\tif (scope.intervalId) {\n\t\t\t\t\tclearInterval(scope.intervalId);\n\t\t\t\t\tscope.intervalId = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscope.stop = function () {\n\t\t\t\tscope.stoppedTime = new Date();\n\t\t\t\tresetInterval();\n\t\t\t\tscope.$emit('timer-stopped', { intervalId: scope.intervalId, millis: scope.millis });\n\t\t\t};\n\n\t\t\t//if not used anywhere, make it a regular function so you don't pollute the scope\n\t\t\tfunction start() {\n\t\t\t\tresetInterval();\n\t\t\t\tscope.intervalId = setInterval(tick, 1000); // make the interval fire every 1000ms = 1s\n\t\t\t}\n\n\t\t\tstart(); //start timer automatically\n\n\t\t\tfunction twoNumbers(num) {\n\t\t\t\tif (num < 10) {\n\t\t\t\t\treturn '0' + num;\n\t\t\t\t}\n\n\t\t\t\treturn num;\n\t\t\t}\n\t\t\t//Cleanup\n\t\t\telem.on('$destroy', function () {\n\t\t\t\tresetInterval();\n\t\t\t});\n\t\t}\n\t};\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FuZ3VsYXIvZGlyZWN0aXZlcy9jb3VudGRvd25UaW1lci5qcz8wNzRhIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJkaXJlY3RpdmUiLCIkdGltZW91dCIsIiRjb21waWxlIiwicmVzdHJpY3QiLCJyZXBsYWNlIiwidHJhbnNjbHVkZSIsInNjb3BlIiwiY291bnRkb3duQXR0ciIsIm9uZmluaXNoIiwidGVtcGxhdGUiLCJsaW5rIiwiZWxlbSIsImF0dHJzIiwiY291bnRkb3duIiwicGFyc2VJbnQiLCJ0aWNrIiwibWlsbGlzIiwic3RvcCIsInNlY29uZHMiLCJ0d29OdW1iZXJzIiwiTWF0aCIsImZsb29yIiwibWludXRlcyIsImhvdXJzIiwiZGF5cyIsIiRhcHBseSIsInJlc2V0SW50ZXJ2YWwiLCJpbnRlcnZhbElkIiwiY2xlYXJJbnRlcnZhbCIsInN0b3BwZWRUaW1lIiwiRGF0ZSIsIiRlbWl0Iiwic3RhcnQiLCJzZXRJbnRlcnZhbCIsIm51bSIsIm9uIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBQSxRQUFRQyxNQUFSLENBQWdCLGdCQUFoQixFQUFrQyxFQUFsQyxFQUF1Q0MsU0FBdkMsQ0FBa0QsZ0JBQWxELEVBQW9FLENBQUMsVUFBRCxFQUFhLFVBQWIsRUFBeUIsVUFBV0MsUUFBWCxFQUFxQkMsUUFBckIsRUFBZ0M7O0FBRTVILFFBQU87QUFDTkMsWUFBVSxHQURKO0FBRUpDLFdBQVEsSUFGSjtBQUdOQyxjQUFXLElBSEw7QUFJTkMsU0FBTztBQUNOQyxrQkFBZSxZQURULEVBQ3VCO0FBQzdCQyxhQUFVO0FBRkosR0FKRDs7QUFTTkMsWUFBVSxVQUNULGlDQURTLEdBRVQsb0JBRlMsR0FHVCxpQ0FIUyxHQUlULFFBYks7O0FBZU5DLFFBQU0sY0FBV0osS0FBWCxFQUFrQkssSUFBbEIsRUFBd0JDLEtBQXhCLEVBQWdDOztBQUVyQztBQUNBLE9BQUlDLFlBQVlDLFNBQVVSLE1BQU1DLGFBQWhCLEVBQStCLEVBQS9CLENBQWhCOztBQUVBLFlBQVNRLElBQVQsR0FBZ0I7O0FBRWY7QUFDQVQsVUFBTVUsTUFBTixHQUFlLENBQWY7O0FBRUksUUFBS0gsWUFBWSxDQUFqQixFQUFxQjtBQUN4QlAsV0FBTVUsTUFBTixHQUFlSCxZQUFZLElBQTNCO0FBQ0FBO0FBQ0EsS0FIRyxNQUdHLElBQUtBLGFBQWEsQ0FBbEIsRUFBc0I7QUFDNUJQLFdBQU1XLElBQU47QUFDSztBQUNMWCxXQUFNRSxRQUFOO0FBQ0E7O0FBRURGLFVBQU1ZLE9BQU4sR0FBZ0JDLFdBQVdDLEtBQUtDLEtBQUwsQ0FBY2YsTUFBTVUsTUFBTixHQUFlLElBQWpCLEdBQTBCLEVBQXRDLENBQVgsQ0FBaEI7QUFDQVYsVUFBTWdCLE9BQU4sR0FBZ0JGLEtBQUtDLEtBQUwsQ0FBZ0JmLE1BQU1VLE1BQU4sSUFBaUIsT0FBTyxFQUF4QixDQUFGLEdBQW1DLEVBQWpELENBQWhCO0FBQ0FWLFVBQU1pQixLQUFOLEdBQWNILEtBQUtDLEtBQUwsQ0FBZ0JmLE1BQU1VLE1BQU4sSUFBaUIsT0FBTyxFQUFQLEdBQVksRUFBN0IsQ0FBRixHQUF3QyxFQUF0RCxDQUFkO0FBQ0FWLFVBQU1rQixJQUFOLEdBQWFKLEtBQUtDLEtBQUwsQ0FBZ0JmLE1BQU1VLE1BQU4sSUFBaUIsT0FBTyxFQUFQLEdBQVksRUFBN0IsQ0FBRixHQUF3QyxFQUF0RCxDQUFiOztBQUVBVixVQUFNbUIsTUFBTjtBQUVBOztBQUVELFlBQVNDLGFBQVQsR0FBeUI7QUFDeEIsUUFBS3BCLE1BQU1xQixVQUFYLEVBQXdCO0FBQ3ZCQyxtQkFBZXRCLE1BQU1xQixVQUFyQjtBQUNBckIsV0FBTXFCLFVBQU4sR0FBbUIsSUFBbkI7QUFDQTtBQUNEOztBQUVEckIsU0FBTVcsSUFBTixHQUFhLFlBQVk7QUFDeEJYLFVBQU11QixXQUFOLEdBQW9CLElBQUlDLElBQUosRUFBcEI7QUFDQUo7QUFDSXBCLFVBQU15QixLQUFOLENBQVksZUFBWixFQUE2QixFQUFFSixZQUFZckIsTUFBTXFCLFVBQXBCLEVBQWdDWCxRQUFRVixNQUFNVSxNQUE5QyxFQUE3QjtBQUNKLElBSkQ7O0FBTUE7QUFDQSxZQUFTZ0IsS0FBVCxHQUFpQjtBQUNoQk47QUFDQXBCLFVBQU1xQixVQUFOLEdBQW1CTSxZQUFhbEIsSUFBYixFQUFtQixJQUFuQixDQUFuQixDQUZnQixDQUU2QjtBQUM3Qzs7QUFFRGlCLFdBL0NxQyxDQStDNUI7O0FBRVQsWUFBU2IsVUFBVCxDQUFvQmUsR0FBcEIsRUFBeUI7QUFDeEIsUUFBSUEsTUFBTSxFQUFWLEVBQWM7QUFDYixZQUFPLE1BQU1BLEdBQWI7QUFDQTs7QUFFRCxXQUFPQSxHQUFQO0FBQ0E7QUFDRDtBQUNBdkIsUUFBS3dCLEVBQUwsQ0FBUyxVQUFULEVBQXFCLFlBQVk7QUFDaENUO0FBQ0EsSUFGRDtBQUlBO0FBNUVLLEVBQVA7QUE4RUEsQ0FoRm1FLENBQXBFIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9hbmd1bGFyL2RpcmVjdGl2ZXMvY291bnRkb3duVGltZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGlzIGEgaGlnaGx5IG1vZGlmaWVkIGFuZCBzcGVjaWZpYyB2ZXJzaW9uIG9mIHRoZSB0aW1lci4gRm9yIGEgbW9yZSByb2J1c3QgYW5kIGJldHRlciBiYXNlbGluZSBzZWUgdGhlIHRpbWVyIHNldHVwIGluIEV2ZXJub3RlLlxuLy8gVGhpcyBpcyBhIGRpcmVjdGl2ZSB0aGF0IGFjY2VwdHMgY291bnRkb3duIHRpbWUgaW4gc2Vjb25kcyBhbmQgY291bnRzIGRvd24gdGhvc2Ugc2Vjb25kcyB0aWxsIG5vdy5cblxuYW5ndWxhci5tb2R1bGUoICdjb3VudGRvd25UaW1lcicsIFtdICkuZGlyZWN0aXZlKCAnY291bnRkb3duVGltZXInLCBbJyR0aW1lb3V0JywgJyRjb21waWxlJywgZnVuY3Rpb24gKCAkdGltZW91dCwgJGNvbXBpbGUgKSB7XG5cblx0cmV0dXJuIHtcblx0XHRyZXN0cmljdDogJ0UnLFxuICAgIHJlcGxhY2U6dHJ1ZSxcblx0XHR0cmFuc2NsdWRlOnRydWUsXG5cdFx0c2NvcGU6IHtcblx0XHRcdGNvdW50ZG93bkF0dHI6ICc9Y291bnRkb3duJywgLy93aGF0IHVuaXQ/IHNlY29uZHNcblx0XHRcdG9uZmluaXNoOiAnJmZpbmlzaCdcblx0XHR9LFxuXG5cdFx0dGVtcGxhdGU6ICc8ZGl2PicgK1xuXHRcdFx0JzxoMSBjbGFzcz1cInRpbWVcIj57eyBtaW51dGVzIH19OicgK1xuXHRcdFx0J3t7IHNlY29uZHMgfX08L2gxPicrXG5cdFx0XHQnPG5nLXRyYW5zY2x1ZGU+PC9uZy10cmFuc2NsdWRlPicgK1xuXHRcdFx0JzwvZGl2PicsXG5cblx0XHRsaW5rOiBmdW5jdGlvbiAoIHNjb3BlLCBlbGVtLCBhdHRycyApIHtcblxuXHRcdFx0Ly9Qcm9wZXJ0aWVzXG5cdFx0XHR2YXIgY291bnRkb3duID0gcGFyc2VJbnQoIHNjb3BlLmNvdW50ZG93bkF0dHIsIDEwICk7XG5cblx0XHRcdGZ1bmN0aW9uIHRpY2soKSB7XG5cblx0XHRcdFx0Ly9UaGUgZGVmYXVsdCB0aW1lIHRoYXQgdGhlIHRpbWVyIHdpbGwgYmUgcmVzZXQgdG8gYWZ0ZXIgY291bnQgZG93biBleHBpcmVzLlxuXHRcdFx0XHRzY29wZS5taWxsaXMgPSAwO1xuXG4gICAgICAgIGlmICggY291bnRkb3duID4gMCApIHtcblx0XHRcdFx0XHRzY29wZS5taWxsaXMgPSBjb3VudGRvd24gKiAxMDAwO1xuXHRcdFx0XHRcdGNvdW50ZG93bi0tO1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3VudGRvd24gPD0gMCApIHtcblx0XHRcdFx0XHRzY29wZS5zdG9wKCk7XG4gICAgICAgICAgLy8gZWxlbS5jaGlsZHJlbignaDEnKS5odG1sKCdUaW1lIHVwIScpO1xuXHRcdFx0XHRcdHNjb3BlLm9uZmluaXNoKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRzY29wZS5zZWNvbmRzID0gdHdvTnVtYmVycyhNYXRoLmZsb29yKCAoIHNjb3BlLm1pbGxpcyAvIDEwMDAgKSAlIDYwICkpO1xuXHRcdFx0XHRzY29wZS5taW51dGVzID0gTWF0aC5mbG9vciggKCAoIHNjb3BlLm1pbGxpcyAvICggMTAwMCAqIDYwICkgKSAlIDYwICkgKTtcblx0XHRcdFx0c2NvcGUuaG91cnMgPSBNYXRoLmZsb29yKCAoICggc2NvcGUubWlsbGlzIC8gKCAxMDAwICogNjAgKiA2MCApICkgJSAyNCApICk7XG5cdFx0XHRcdHNjb3BlLmRheXMgPSBNYXRoLmZsb29yKCAoICggc2NvcGUubWlsbGlzIC8gKCAxMDAwICogNjAgKiA2MCApICkgLyAyNCApICk7XG5cblx0XHRcdFx0c2NvcGUuJGFwcGx5KCk7XG5cblx0XHRcdH1cblxuXHRcdFx0ZnVuY3Rpb24gcmVzZXRJbnRlcnZhbCgpIHtcblx0XHRcdFx0aWYgKCBzY29wZS5pbnRlcnZhbElkICkge1xuXHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoIHNjb3BlLmludGVydmFsSWQgKTtcblx0XHRcdFx0XHRzY29wZS5pbnRlcnZhbElkID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRzY29wZS5zdG9wID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRzY29wZS5zdG9wcGVkVGltZSA9IG5ldyBEYXRlKCk7XG5cdFx0XHRcdHJlc2V0SW50ZXJ2YWwoKTtcbiAgICAgICAgc2NvcGUuJGVtaXQoJ3RpbWVyLXN0b3BwZWQnLCB7IGludGVydmFsSWQ6IHNjb3BlLmludGVydmFsSWQsIG1pbGxpczogc2NvcGUubWlsbGlzIH0pO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly9pZiBub3QgdXNlZCBhbnl3aGVyZSwgbWFrZSBpdCBhIHJlZ3VsYXIgZnVuY3Rpb24gc28geW91IGRvbid0IHBvbGx1dGUgdGhlIHNjb3BlXG5cdFx0XHRmdW5jdGlvbiBzdGFydCgpIHtcblx0XHRcdFx0cmVzZXRJbnRlcnZhbCgpO1xuXHRcdFx0XHRzY29wZS5pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoIHRpY2ssIDEwMDApOyAvLyBtYWtlIHRoZSBpbnRlcnZhbCBmaXJlIGV2ZXJ5IDEwMDBtcyA9IDFzXG5cdFx0XHR9XG5cblx0XHRcdHN0YXJ0KCk7IC8vc3RhcnQgdGltZXIgYXV0b21hdGljYWxseVxuXG5cdFx0XHRmdW5jdGlvbiB0d29OdW1iZXJzKG51bSkge1xuXHRcdFx0XHRpZiAobnVtIDwgMTApIHtcblx0XHRcdFx0XHRyZXR1cm4gJzAnICsgbnVtO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG51bTtcblx0XHRcdH1cblx0XHRcdC8vQ2xlYW51cFxuXHRcdFx0ZWxlbS5vbiggJyRkZXN0cm95JywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRyZXNldEludGVydmFsKCk7XG5cdFx0XHR9ICk7XG5cblx0XHR9XG5cdH07XG59XSApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9hbmd1bGFyL2RpcmVjdGl2ZXMvY291bnRkb3duVGltZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/angular/directives/countdownTimer.js\n");

/***/ }),

/***/ "./resources/assets/js/angular/directives/miniGameState.js":
/***/ (function(module, exports) {

eval("// EXAMPLE uploadPostImage\n// <game-state><game-state>\n\n\nvar url = '\\n<div id=\"mini-game\">\\n\\n  <div class=\"ui labeled button\" tabindex=\"-1\" ng-if=\"game_state == \\'loading\\'\">\\n    <div class=\"ui red button\">\\n      <i class=\"clock icon\"></i> <ng-transclude></ng-transclude> Loading\\n    </div>\\n    <a class=\"ui basic red left pointing label\">\\n      <countdown-timer countdown=\"game_timer\" finish=\"pageReload()\"></countdown-timer>\\n    </a>\\n  </div>\\n\\n\\n  <div class=\"ui labeled button\" tabindex=\"-1\" ng-if=\"game_state == \\'active\\'\" ng-click=\"joinGame()\">\\n    <div class=\"ui orange button\">\\n     <ng-transclude></ng-transclude> \\n      <i class=\"gamepad icon\"></i>Game On\\n    </div>\\n    <a class=\"ui basic left pointing orange label\" ng-click=\"joinGame()\">\\n        <countdown-timer countdown=\"game_timer\" finish=\"pageReload()\"></countdown-timer>\\n    </a>\\n  </div>\\n\\n';\n\nangular.module('miniGameState', []).directive('miniGameState', ['$location', '$route', 'Notification', '$localStorage', '$sessionStorage', 'sendRequest', function ($location, $route, Notification, $localStorage, $sessionStorage, sendRequest) {\n  return {\n    restrict: 'E',\n    scope: {\n      // dest : '=',\n      // mdl:'=',\n      // attr: '=',\n      // altText: '='\n    },\n    // templateUrl:'angular/directive-templates/gameStateTemplate.php',\n    template: url,\n    replace: true,\n    transclude: true,\n    link: function link(scope, element, attributes) {},\n    controller: ['$scope', function ($scope) {\n\n      if (sendRequest.getData('user_score') || !angular.isUndefined($localStorage.user_score)) {\n        $scope.user_score = $localStorage.user_score;\n      }\n\n      //when the game was paused, ends the user's incomplete game and displays the results\n      $scope.endGameReload = function () {\n        alert('The game has ended');\n        //Send a request to end the user's game and redirect to results display page\n        sendRequest.postRequest('/user/end-exam', $sessionStorage.user_questions).then(function (rsp) {\n          delete $sessionStorage.user_questions;\n          delete $sessionStorage.extra;\n          delete $sessionStorage.options;\n\n          if (rsp.status == 422) {\n            Notification.error({ message: 'No active game in progress', positionX: 'center' });\n            $location.path('/dashboard');\n          } else if (rsp.status == 200) {\n            if (rsp.data.status) {\n              sendRequest.storeData('user_score', rsp.data.user_score);\n              $localStorage.user_score = rsp.data.user_score;\n              $location.path('/dashboard/display-results');\n            }\n          }\n        });\n      };\n\n      //when the game was paused, take the user back to the game\n      $scope.resumeGame = function () {\n        $scope.game_state = null;\n\n        sendRequest.postRequest('user/resume-game').then(function () {\n          $location.path('/dashboard/game-play');\n        });\n\n        //Send a request to resume the game and set the session back to active\n\n        $scope.displayResults();\n      };\n\n      // handle page reload on timer countdown so that the page can get the next thing from the server\n      $scope.pageReload = function () {\n        // location.reload();\n        sendRequest.getGameState().then(function (rsp) {\n          $scope.game_state = rsp.game_state;\n          $scope.game_timer = rsp.game_timer;\n          $scope.total_examinees = rsp.total_examinees;\n        });\n      };\n\n      // refresh the game state and then redirect to the display results page\n      $scope.displayResults = function () {\n        NProgress.start();\n\n        sendRequest.getGameState('/user/get-game-state').then(function (rsp) {\n          $scope.game_state = rsp.game_state;\n          $scope.game_timer = rsp.game_timer;\n\n          if (rsp.game_state == 'loading') {\n            $location.path('/dashboard/display-results');\n          } else {\n            // $location.url('/invalid');\n            $route.reload();\n          }\n          NProgress.done();\n        });\n      };\n\n      $scope.joinGame = function () {\n        NProgress.start();\n\n        delete $localStorage.user_score;\n        delete $sessionStorage.extra;\n        delete $sessionStorage.options;\n        delete $sessionStorage.user_questions;\n\n        sendRequest.postRequest('/user/join-game').then(function (rsp) {\n\n          if (rsp.status == 422) {\n            Notification.error({ message: 'No active game in progress', positionX: 'center' });\n          } else if (rsp.status == 200) {\n            if (rsp.data.status) {\n              $scope.game_state = 'transition';\n              $location.path('/dashboard/game-play');\n            }\n          } else if (rsp.status == 402) {\n            Notification.error({ message: 'Insufficient credits to join game.', positionX: 'center' });\n          } else if (rsp.status == 403) {\n            $scope.game_state = 'transition';\n            Notification.error({ message: 'Already in a game session.', positionX: 'center' });\n            $location.path('/dashboard/game-play');\n          }\n        });\n\n        NProgress.done();\n      };\n\n      sendRequest.getGameState().then(function (rsp) {\n        $scope.game_state = rsp.game_state;\n        $scope.game_timer = rsp.game_timer;\n        $scope.total_examinees = rsp.total_examinees;\n      });\n    }]\n  };\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/angular/directives/miniGameState.js\n");

/***/ }),

/***/ "./resources/assets/js/angular/routes/home-routes.js":
/***/ (function(module, exports) {

eval("// module.exports = function () {\nhome.config(['$routeProvider', '$locationProvider', '$provide', function ($routeProvider, $locationProvider, $provide) {\n  $routeProvider.when('/', {\n    controller: 'HomeController'\n  }).when('/login', {\n    controller: 'LoginController'\n  }).when('/register', {\n    controller: 'RegisterController'\n  }).when('/ref/:refcode', {\n    controller: 'RegisterController'\n  }).otherwise({\n    redirectTo: '/'\n  });\n  $locationProvider.html5Mode(true);\n  $provide.decorator('$locale', ['$delegate', function ($delegate) {\n    $delegate.NUMBER_FORMATS = {\n      DECIMAL_SEP: '.',\n      GROUP_SEP: ',',\n      PATTERNS: [{ // Decimal Pattern\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 3,\n        posPre: '',\n        posSuf: '',\n        negPre: '-',\n        negSuf: '',\n        gSize: 3,\n        lgSize: 3\n      }, { //Currency Pattern\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 2,\n        posPre: '\\xA4',\n        posSuf: '',\n        negPre: '(\\xA4',\n        negSuf: ')',\n        gSize: 3,\n        lgSize: 3\n      }],\n      CURRENCY_SYM: '₦'\n    };\n    return $delegate;\n  }]);\n}]);\n\n// };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FuZ3VsYXIvcm91dGVzL2hvbWUtcm91dGVzLmpzP2M0YTUiXSwibmFtZXMiOlsiaG9tZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkcHJvdmlkZSIsIndoZW4iLCJjb250cm9sbGVyIiwib3RoZXJ3aXNlIiwicmVkaXJlY3RUbyIsImh0bWw1TW9kZSIsImRlY29yYXRvciIsIiRkZWxlZ2F0ZSIsIk5VTUJFUl9GT1JNQVRTIiwiREVDSU1BTF9TRVAiLCJHUk9VUF9TRVAiLCJQQVRURVJOUyIsIm1pbkludCIsIm1pbkZyYWMiLCJtYXhGcmFjIiwicG9zUHJlIiwicG9zU3VmIiwibmVnUHJlIiwibmVnU3VmIiwiZ1NpemUiLCJsZ1NpemUiLCJDVVJSRU5DWV9TWU0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0VBLEtBQUtDLE1BQUwsQ0FBWSxDQUFDLGdCQUFELEVBQW1CLG1CQUFuQixFQUF3QyxVQUF4QyxFQUFvRCxVQUFVQyxjQUFWLEVBQTBCQyxpQkFBMUIsRUFBNkNDLFFBQTdDLEVBQXVEO0FBQ3RIRixpQkFFR0csSUFGSCxDQUVRLEdBRlIsRUFFYTtBQUNUQyxnQkFBWTtBQURILEdBRmIsRUFNR0QsSUFOSCxDQU1RLFFBTlIsRUFNa0I7QUFDZEMsZ0JBQVk7QUFERSxHQU5sQixFQVVHRCxJQVZILENBVVEsV0FWUixFQVVxQjtBQUNqQkMsZ0JBQVk7QUFESyxHQVZyQixFQWNHRCxJQWRILENBY1EsZUFkUixFQWN5QjtBQUNyQkMsZ0JBQVk7QUFEUyxHQWR6QixFQWtCR0MsU0FsQkgsQ0FrQmE7QUFDVEMsZ0JBQVk7QUFESCxHQWxCYjtBQXFCRUwsb0JBQWtCTSxTQUFsQixDQUE0QixJQUE1QjtBQUNBTCxXQUFTTSxTQUFULENBQW1CLFNBQW5CLEVBQThCLENBQUMsV0FBRCxFQUFjLFVBQVNDLFNBQVQsRUFBb0I7QUFDN0RBLGNBQVVDLGNBQVYsR0FBMkI7QUFDekJDLG1CQUFhLEdBRFk7QUFFekJDLGlCQUFXLEdBRmM7QUFHekJDLGdCQUFVLENBQUMsRUFBRTtBQUNYQyxnQkFBUSxDQURDO0FBRVRDLGlCQUFTLENBRkE7QUFHVEMsaUJBQVMsQ0FIQTtBQUlUQyxnQkFBUSxFQUpDO0FBS1RDLGdCQUFRLEVBTEM7QUFNVEMsZ0JBQVEsR0FOQztBQU9UQyxnQkFBUSxFQVBDO0FBUVRDLGVBQU8sQ0FSRTtBQVNUQyxnQkFBUTtBQVRDLE9BQUQsRUFVUCxFQUFFO0FBQ0hSLGdCQUFRLENBRFA7QUFFREMsaUJBQVMsQ0FGUjtBQUdEQyxpQkFBUyxDQUhSO0FBSURDLGdCQUFRLE1BSlA7QUFLREMsZ0JBQVEsRUFMUDtBQU1EQyxnQkFBUSxPQU5QO0FBT0RDLGdCQUFRLEdBUFA7QUFRREMsZUFBTyxDQVJOO0FBU0RDLGdCQUFRO0FBVFAsT0FWTyxDQUhlO0FBd0J6QkMsb0JBQWM7QUF4QlcsS0FBM0I7QUEwQkEsV0FBT2QsU0FBUDtBQUNELEdBNUI0QixDQUE5QjtBQTZCRixDQXBEVyxDQUFaOztBQXNERiIsImZpbGUiOiIuL3Jlc291cmNlcy9hc3NldHMvanMvYW5ndWxhci9yb3V0ZXMvaG9tZS1yb3V0ZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgaG9tZS5jb25maWcoWyckcm91dGVQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsICckcHJvdmlkZScsIGZ1bmN0aW9uICgkcm91dGVQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIsICRwcm92aWRlKSB7XG4gICAkcm91dGVQcm92aWRlclxuXG4gICAgIC53aGVuKCcvJywge1xuICAgICAgIGNvbnRyb2xsZXI6ICdIb21lQ29udHJvbGxlcidcbiAgICAgfSlcblxuICAgICAud2hlbignL2xvZ2luJywge1xuICAgICAgIGNvbnRyb2xsZXI6ICdMb2dpbkNvbnRyb2xsZXInXG4gICAgIH0pXG5cbiAgICAgLndoZW4oJy9yZWdpc3RlcicsIHtcbiAgICAgICBjb250cm9sbGVyOiAnUmVnaXN0ZXJDb250cm9sbGVyJ1xuICAgICB9KVxuXG4gICAgIC53aGVuKCcvcmVmLzpyZWZjb2RlJywge1xuICAgICAgIGNvbnRyb2xsZXI6ICdSZWdpc3RlckNvbnRyb2xsZXInXG4gICAgIH0pXG5cbiAgICAgLm90aGVyd2lzZSh7XG4gICAgICAgcmVkaXJlY3RUbzogJy8nXG4gICAgIH0pO1xuICAgICAkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XG4gICAgICRwcm92aWRlLmRlY29yYXRvcignJGxvY2FsZScsIFsnJGRlbGVnYXRlJywgZnVuY3Rpb24oJGRlbGVnYXRlKSB7XG4gICAgICAgICRkZWxlZ2F0ZS5OVU1CRVJfRk9STUFUUyA9IHtcbiAgICAgICAgICBERUNJTUFMX1NFUDogJy4nLFxuICAgICAgICAgIEdST1VQX1NFUDogJywnLFxuICAgICAgICAgIFBBVFRFUk5TOiBbeyAvLyBEZWNpbWFsIFBhdHRlcm5cbiAgICAgICAgICAgIG1pbkludDogMSxcbiAgICAgICAgICAgIG1pbkZyYWM6IDAsXG4gICAgICAgICAgICBtYXhGcmFjOiAzLFxuICAgICAgICAgICAgcG9zUHJlOiAnJyxcbiAgICAgICAgICAgIHBvc1N1ZjogJycsXG4gICAgICAgICAgICBuZWdQcmU6ICctJyxcbiAgICAgICAgICAgIG5lZ1N1ZjogJycsXG4gICAgICAgICAgICBnU2l6ZTogMyxcbiAgICAgICAgICAgIGxnU2l6ZTogM1xuICAgICAgICAgIH0sIHsgLy9DdXJyZW5jeSBQYXR0ZXJuXG4gICAgICAgICAgICBtaW5JbnQ6IDEsXG4gICAgICAgICAgICBtaW5GcmFjOiAwLFxuICAgICAgICAgICAgbWF4RnJhYzogMixcbiAgICAgICAgICAgIHBvc1ByZTogJ1xcdTAwQTQnLFxuICAgICAgICAgICAgcG9zU3VmOiAnJyxcbiAgICAgICAgICAgIG5lZ1ByZTogJyhcXHUwMEE0JyxcbiAgICAgICAgICAgIG5lZ1N1ZjogJyknLFxuICAgICAgICAgICAgZ1NpemU6IDMsXG4gICAgICAgICAgICBsZ1NpemU6IDNcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBDVVJSRU5DWV9TWU06ICfigqYnXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAkZGVsZWdhdGU7XG4gICAgICB9XSk7XG4gIH1dKTtcblxuLy8gfTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvanMvYW5ndWxhci9yb3V0ZXMvaG9tZS1yb3V0ZXMuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/angular/routes/home-routes.js\n");

/***/ }),

/***/ "./resources/assets/js/angular/services/services.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {\nangular.module('sendRequest', []).factory('sendRequest', ['$http', '$q', '$sessionStorage', function ($http, $q, $sessionStorage) {\n\n  var data = {};\n  return {\n    storeData: function storeData(key, value) {\n      data[key] = value;\n    },\n\n    getData: function getData(key) {\n      return data[key];\n    },\n\n    getUserDetails: function getUserDetails(url) {\n      var flushStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var deferred = $q.defer();\n\n      if (flushStore || !this.getData('userdetails')) {\n        var _this = this;\n        return this.postRequest(url).then(function (rsp) {\n          _this.storeData('userdetails', rsp.data);\n          return _this.getData('userdetails');\n        });\n      }\n      deferred.resolve(this.getData('userdetails'));\n      return deferred.promise;\n    },\n\n    getTotalEarnings: function getTotalEarnings(url) {\n      var flushStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var deferred = $q.defer();\n\n      if (flushStore || !this.getData('total_earnings')) {\n        var _this = this;\n        return this.postRequest(url).then(function (rsp) {\n          _this.storeData('total_earnings', rsp.data);\n          return _this.getData('total_earnings');\n        });\n      }\n      deferred.resolve(this.getData('total_earnings'));\n      return deferred.promise;\n    },\n\n    getBanks: function getBanks(url) {\n      var deferred = $q.defer();\n\n      if (!this.getData('banks_list')) {\n        var _this = this;\n        return this.postRequest(url).then(function (rsp) {\n          _this.storeData('banks_list', rsp.data);\n          return _this.getData('banks_list');\n        });\n      }\n      deferred.resolve(this.getData('banks_list'));\n      return deferred.promise;\n    },\n\n    getGameState: function getGameState() {\n      return this.postRequest('/user/get-game-state').then(function (rsp) {\n        return rsp.data;\n      });\n    },\n\n    getUserQuestions: function getUserQuestions(url) {\n      var deferred = $q.defer();\n\n      if (!$sessionStorage.user_questions) {\n        var _this = this;\n        return this.postRequest(url).then(function (rsp) {\n          $sessionStorage.user_questions = rsp.data.user_questions;\n          return $sessionStorage.user_questions;\n        });\n      }\n      deferred.resolve($sessionStorage.user_questions);\n      return deferred.promise;\n    },\n\n    getCountriesStates: function getCountriesStates() {\n      var deferred = $q.defer();\n\n      if (!this.getData('countries_states')) {\n        var _this = this;\n        return this.postRequest('/api/get-countries-state').then(function (rsp) {\n          _this.storeData('countries_states', rsp.data);\n          return _this.getData('countries_states');\n        });\n      }\n      deferred.resolve(this.getData('countries_states'));\n      return deferred.promise;\n    },\n\n    processImageUpload: function processImageUpload(url, data, foldername) {\n      //Handle image changes\n      NProgress.start();\n\n      // send the image to the server as base64 data\n      return $http.post(url, { image: data, fn: foldername }).then(function (response) {\n        NProgress.done();\n        return response.data;\n      }, function (err) {\n        console.log(err.statusText);\n      });\n    },\n\n    postRequest: function postRequest(url, data) {\n\n      return $http.post(url, { details: data }).then(function (response) {\n        return response;\n      }, function (err) {\n        if (err.status == 419 || err.status == 401) {\n          location.href = '/login';\n        } else if (err.status == 403) {\n          location.href = '/suspended';\n        }\n        console.log(err);\n        return err;\n      });\n    },\n\n    request: function request(url) {\n      var data = [];\n      return $http.get(url).then(function (response) {\n        return response.data;\n      }, function (err) {\n        console.log(err.statusText);\n      });\n    }\n  };\n}]);\n\nangular.module('bootstrapPage', []).factory('bootstrapPage', ['$timeout', '$location', 'Notification', 'sendRequest', function ($timeout, $location, Notification, sendRequest) {\n  return {\n    dashboard: function dashboard(scope) {\n\n      sendRequest.postRequest('/user/get-dashboard-page-details');\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n\n          Echo.channel('exam_member_count').listen('ExamJoined', function (e) {\n            scope.total_examinees = e.total_examinees;\n          });\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {\n          Echo.leave('exam_member_count');\n        }, 0);\n      });\n    },\n    profile: function profile(scope) {\n      sendRequest.postRequest('/user/get-profile-page-details').then(function (rsp) {\n        if (rsp.status == 200) {\n          scope.user_transactions = rsp.data.page_details.transactions;\n          scope.user_earnings = rsp.data.page_details.earnings;\n          scope.user_games = rsp.data.page_details.games;\n          scope.referrals = rsp.data.page_details.referrals;\n        }\n      });\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('#profile-menu .item').tab();\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n    },\n    settings: function settings(scope) {\n      sendRequest.getBanks('/api/get-banks-list').then(function (rsp) {\n        scope.banks = rsp.banks;\n      });\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('#edit .item').tab();\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n    },\n    gameplay: function gameplay(scope) {\n      sendRequest.getUserDetails('/user/get-user-details', true).then(function (rsp) {\n        scope.userdetails = rsp.userdetails;\n      });\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n          $('.ui.accordion').accordion();\n\n          Echo.channel('exam_member_count').listen('ExamJoined', function (e) {\n            scope.total_examinees = e.total_examinees;\n          });\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {\n          sendRequest.postRequest('/user/pause-game');\n          Echo.leave('exam_member_count');\n        }, 0);\n      });\n    },\n    results: function results(scope) {\n      sendRequest.postRequest('/user/get-exam-results').then(function (rsp) {\n        if (rsp.status == 200) {\n          if (rsp.data.results == false) {\n            $location.path('/dashboard');\n            Notification.error({ message: 'Error fetching results.', positionX: 'center' });\n          }\n          if (rsp.data != 'invalid') {\n            scope.results = rsp.data.results;\n            scope.user_earning = rsp.data.user_earning;\n          } else {\n            $location.path('/dashboard');\n            Notification.error({ message: 'Insufficient users for game session. Units reversed', positionX: 'center' });\n          }\n        }\n      });\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n    },\n    messages: function messages(scope) {\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n          $('.special.cards .image').dimmer({\n            on: 'hover'\n          });\n        }, 500);\n      });\n    },\n    notices: function notices(scope) {\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n    }\n  };\n}]);\n\nangular.module('bootstrapAdminPage', []).factory('bootstrapAdminPage', ['$timeout', '$location', 'Notification', 'sendRequest', function ($timeout, $location, Notification, sendRequest) {\n  return {\n    dashboard: function dashboard(scope) {\n\n      sendRequest.postRequest(route_root + '/api/get-dashboard-page-details').then(function (rsp) {\n        if (rsp.status == 200) {}\n      });\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n          $('.shape').shape();\n          NProgress.done();\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    },\n\n    questions: function questions(scope) {\n\n      sendRequest.postRequest(route_root + '/api/get-questions-page-details').then(function (rsp) {\n        if (rsp.status == 200) {\n          scope.questions = rsp.data.questions;\n        }\n      }, function (err) {\n        Notification.error('Error retrieving questions from server');\n      });\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n          $('.shape').shape();\n          NProgress.done();\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    },\n\n    admins: function admins(scope) {\n\n      sendRequest.postRequest(route_root + '/api/get-admins-page-details').then(function (rsp) {\n        if (rsp.status == 200) {\n          scope.admins = rsp.data.admins;\n          NProgress.done();\n        }\n      }, function (err) {\n        Notification.error('Error retrieving admins from server');\n      });\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    },\n\n    users: function users(scope) {\n\n      sendRequest.postRequest(route_root + '/api/get-users-page-details').then(function (rsp) {\n        if (rsp.status == 200) {\n          scope.users = rsp.data.users;\n          NProgress.done();\n        }\n      }, function (err) {\n        Notification.error('Error retrieving users from server');\n      });\n\n      sendRequest.getBanks('/api/get-banks-list').then(function (rsp) {\n        scope.banks = rsp.banks;\n      });\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    },\n\n    games: function games(scope) {\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n          $('.ui.sticky').sticky({\n            context: '#content-context'\n          });\n          NProgress.done();\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    },\n\n    transactions: function transactions(scope) {\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n          $('.ui.sticky').sticky({\n            context: '#content-context'\n          });\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    },\n\n    messages: function messages(scope) {\n\n      scope.$on('$viewContentLoaded', function () {\n        $timeout(function () {\n          $('.dropdown_menu').dropdown();\n        }, 500);\n      });\n      scope.$on('$destroy', function () {\n        $timeout(function () {}, 0);\n      });\n    }\n  };\n}]);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/angular/services/services.js\n");

/***/ }),

/***/ "./resources/assets/js/home-app.js":
/***/ (function(module, exports, __webpack_require__) {

eval("// Require the stuffs that are particular to this app\n\n\nhome = angular.module('home', ['ngRoute', 'ngStorage', 'ui-notification', 'yaru22.angular-timeago', 'sendRequest', 'countdownTimer', 'miniGameState']);\n\nhome.run(['$rootScope', '$window', 'Notification', 'sendRequest', function ($rootScope, $window, Notification, sendRequest) {\n\t$rootScope.logout = function () {\n\t\tsendRequest.postRequest('/logout').then(function (response) {\n\t\t\tif (response.status == 200) {\n\t\t\t\tNotification.success({\n\t\t\t\t\tmessage: 'Logout successful',\n\t\t\t\t\tpositionX: 'center'\n\t\t\t\t});\n\t\t\t\t$window.location.href = '/login';\n\t\t\t} else {\n\t\t\t\tNotification.error({\n\t\t\t\t\tmessage: 'Logout failed! Reload page.',\n\t\t\t\t\tpositionX: 'center'\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n}]);\n\nhome.factory('bootstrapPage', ['$timeout', function InboxService($timeout) {\n\treturn {\n\t\thomepage: function homepage(scope) {\n\t\t\tscope.$on('$viewContentLoaded', function () {});\n\t\t}\n\t};\n}]);\n\n__webpack_require__(\"./resources/assets/js/angular/services/services.js\");\n\n__webpack_require__(\"./resources/assets/js/angular/directives/countdownTimer.js\");\n__webpack_require__(\"./resources/assets/js/angular/directives/miniGameState.js\");\n\n__webpack_require__(\"./resources/assets/js/angular/routes/home-routes.js\");\n\n__webpack_require__(\"./resources/assets/js/angular/controllers/home-controller.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2hvbWUtYXBwLmpzPzMzMzQiXSwibmFtZXMiOlsiaG9tZSIsImFuZ3VsYXIiLCJtb2R1bGUiLCJydW4iLCIkcm9vdFNjb3BlIiwiJHdpbmRvdyIsIk5vdGlmaWNhdGlvbiIsInNlbmRSZXF1ZXN0IiwibG9nb3V0IiwicG9zdFJlcXVlc3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJzdWNjZXNzIiwibWVzc2FnZSIsInBvc2l0aW9uWCIsImxvY2F0aW9uIiwiaHJlZiIsImVycm9yIiwiZmFjdG9yeSIsIkluYm94U2VydmljZSIsIiR0aW1lb3V0IiwiaG9tZXBhZ2UiLCJzY29wZSIsIiRvbiIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFJQUEsT0FBT0MsUUFBUUMsTUFBUixDQUFlLE1BQWYsRUFBdUIsQ0FBQyxTQUFELEVBQVksV0FBWixFQUF5QixpQkFBekIsRUFBNEMsd0JBQTVDLEVBQXNFLGFBQXRFLEVBQXFGLGdCQUFyRixFQUF1RyxlQUF2RyxDQUF2QixDQUFQOztBQUVBRixLQUFLRyxHQUFMLENBQVMsQ0FBQyxZQUFELEVBQWUsU0FBZixFQUEwQixjQUExQixFQUEwQyxhQUExQyxFQUF5RCxVQUFVQyxVQUFWLEVBQXNCQyxPQUF0QixFQUErQkMsWUFBL0IsRUFBNkNDLFdBQTdDLEVBQTBEO0FBQzNISCxZQUFXSSxNQUFYLEdBQW9CLFlBQVk7QUFDL0JELGNBQVlFLFdBQVosQ0FBd0IsU0FBeEIsRUFDRUMsSUFERixDQUNPLFVBQVVDLFFBQVYsRUFBb0I7QUFDekIsT0FBSUEsU0FBU0MsTUFBVCxJQUFtQixHQUF2QixFQUE0QjtBQUMzQk4saUJBQWFPLE9BQWIsQ0FBcUI7QUFDcEJDLGNBQVMsbUJBRFc7QUFFcEJDLGdCQUFXO0FBRlMsS0FBckI7QUFJQVYsWUFBUVcsUUFBUixDQUFpQkMsSUFBakIsR0FBd0IsUUFBeEI7QUFDQSxJQU5ELE1BTU87QUFDTlgsaUJBQWFZLEtBQWIsQ0FBbUI7QUFDbEJKLGNBQVMsNkJBRFM7QUFFbEJDLGdCQUFXO0FBRk8sS0FBbkI7QUFJQTtBQUNELEdBZEY7QUFlQSxFQWhCRDtBQWlCQSxDQWxCUSxDQUFUOztBQW9CQWYsS0FBS21CLE9BQUwsQ0FBYSxlQUFiLEVBQThCLENBQUMsVUFBRCxFQUFhLFNBQVNDLFlBQVQsQ0FBc0JDLFFBQXRCLEVBQWdDO0FBQzFFLFFBQU87QUFDTkMsWUFBVSxrQkFBVUMsS0FBVixFQUFpQjtBQUN2QkEsU0FBTUMsR0FBTixDQUFVLG9CQUFWLEVBQWdDLFlBQVcsQ0FDMUMsQ0FERDtBQUdIO0FBTEssRUFBUDtBQU9BLENBUjZCLENBQTlCOztBQVdBLG1CQUFBQyxDQUFRLG9EQUFSOztBQUVBLG1CQUFBQSxDQUFRLDREQUFSO0FBQ0EsbUJBQUFBLENBQVEsMkRBQVI7O0FBR0EsbUJBQUFBLENBQVEscURBQVI7O0FBRUEsbUJBQUFBLENBQVEsOERBQVIiLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2hvbWUtYXBwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUmVxdWlyZSB0aGUgc3R1ZmZzIHRoYXQgYXJlIHBhcnRpY3VsYXIgdG8gdGhpcyBhcHBcblxuXG5cbmhvbWUgPSBhbmd1bGFyLm1vZHVsZSgnaG9tZScsIFsnbmdSb3V0ZScsICduZ1N0b3JhZ2UnLCAndWktbm90aWZpY2F0aW9uJywgJ3lhcnUyMi5hbmd1bGFyLXRpbWVhZ28nLCAnc2VuZFJlcXVlc3QnLCAnY291bnRkb3duVGltZXInLCAnbWluaUdhbWVTdGF0ZSddKTtcblxuaG9tZS5ydW4oWyckcm9vdFNjb3BlJywgJyR3aW5kb3cnLCAnTm90aWZpY2F0aW9uJywgJ3NlbmRSZXF1ZXN0JywgZnVuY3Rpb24gKCRyb290U2NvcGUsICR3aW5kb3csIE5vdGlmaWNhdGlvbiwgc2VuZFJlcXVlc3QpIHtcblx0JHJvb3RTY29wZS5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0c2VuZFJlcXVlc3QucG9zdFJlcXVlc3QoJy9sb2dvdXQnKVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHRcdGlmIChyZXNwb25zZS5zdGF0dXMgPT0gMjAwKSB7XG5cdFx0XHRcdFx0Tm90aWZpY2F0aW9uLnN1Y2Nlc3Moe1xuXHRcdFx0XHRcdFx0bWVzc2FnZTogJ0xvZ291dCBzdWNjZXNzZnVsJyxcblx0XHRcdFx0XHRcdHBvc2l0aW9uWDogJ2NlbnRlcidcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHQkd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL2xvZ2luJztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHROb3RpZmljYXRpb24uZXJyb3Ioe1xuXHRcdFx0XHRcdFx0bWVzc2FnZTogJ0xvZ291dCBmYWlsZWQhIFJlbG9hZCBwYWdlLicsXG5cdFx0XHRcdFx0XHRwb3NpdGlvblg6ICdjZW50ZXInXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHR9O1xufV0pO1xuXG5ob21lLmZhY3RvcnkoJ2Jvb3RzdHJhcFBhZ2UnLCBbJyR0aW1lb3V0JywgZnVuY3Rpb24gSW5ib3hTZXJ2aWNlKCR0aW1lb3V0KSB7XG5cdHJldHVybiB7XG5cdCBob21lcGFnZTogZnVuY3Rpb24gKHNjb3BlKSB7XG4gICAgICBzY29wZS4kb24oJyR2aWV3Q29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgfSk7XG5cblx0XHR9XG5cdH07XG59XSk7XG5cblxucmVxdWlyZSgnLi9hbmd1bGFyL3NlcnZpY2VzL3NlcnZpY2VzJyk7XG5cbnJlcXVpcmUoJy4vYW5ndWxhci9kaXJlY3RpdmVzL2NvdW50ZG93blRpbWVyJyk7XG5yZXF1aXJlKCcuL2FuZ3VsYXIvZGlyZWN0aXZlcy9taW5pR2FtZVN0YXRlJyk7XG5cblxucmVxdWlyZSgnLi9hbmd1bGFyL3JvdXRlcy9ob21lLXJvdXRlcycpO1xuXG5yZXF1aXJlKCcuL2FuZ3VsYXIvY29udHJvbGxlcnMvaG9tZS1jb250cm9sbGVyJyk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2hvbWUtYXBwLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/js/home-app.js\n");

/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./resources/assets/js/home-app.js");


/***/ })

},[1]);